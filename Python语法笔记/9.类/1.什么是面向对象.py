'''
面向对象编程:面向对象编程就是用代码来模拟表示现实世界中的对象(人,动物......)
而将现实世界的对象抽象成代码世界中的对象时,使用"属性"=="外貌"+"方法"=="行为"来描述或模拟现实世界中的人,动物,建筑物等等
即,当我们面向对象编程时,应该首先思考这个对象的"属性"和"方法",而后用python的代码规则编写出来 == 属性+方法=对象
'''
#比如模拟小乌龟
class Turtle: #类名的首字母大写(驼峰命名法)
    '''关于一个类的简单例子,还不是真正的类'''
    '''真正的类是可以批量生成的...'''

    '''属性'''
    color = "green"
    leg = "four"
    weight = "10kg"
    shell = True
    mouth_size = "big"

    '''方法'''
    def climb(self):
        print("小乌龟正在爬...")

    def run(self):
        print("小乌龟正在跑...")

    def bite(self):
        print("小乌龟正在咬人...")

    def eat_food(self):
        print("小乌龟正在吃东西...")

    def sleep(self):
        print("小乌龟正在睡觉...")


#OO的特征:封装-继承-多态:

    #封装:在前面的python基础的学习过程中肯定都用了python官方提供的许多方法,
    #那些方法实际上就是被封装在了一个个类中,当我们需要时便可以调用

    #继承:就是当我们写了一个类之后,我们又写了一个细分的小类，
    #而这个小类也具有一些或全部的大类中的属性或行为,此时小类之间继承大类中的一些或全部的属性或方法

    #多态:不同对象对同一方法响应不同的行动
    #例如:对于前进这个方法,不同的动物对应着不同的行动,狗用跑,乌龟用爬,人用走等等
